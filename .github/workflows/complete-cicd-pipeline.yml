name: Complete CI/CD Pipeline

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: my-app/package-lock.json

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install frontend dependencies
      run: |
        cd my-app
        npm ci

    - name: Install backend dependencies
      run: |
        cd BACKEND
        pip install -r requirements.txt

    - name: Run frontend tests
      run: |
        cd my-app
        CI=true npm test -- --watchAll=false --transformIgnorePatterns "node_modules/(?!axios)/"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      run: |
        # Install Docker Compose v1 for compatibility
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Build Docker images
      run: |
        docker-compose build

    - name: Run Docker containers
      run: |
        docker-compose up -d
        sleep 10  # Give containers time to start

    - name: Check if containers are running
      run: |
        docker-compose ps

    - name: Check backend health
      run: |
        curl -f http://localhost:5003 || echo "Backend not responding"

    - name: Stop Docker containers
      run: |
        docker-compose down

  deploy-frontend:
    name: Deploy Frontend
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: my-app/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd my-app
        npm ci

    - name: Build frontend
      run: |
        cd my-app
        npm run build

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_DEPLOY_KEY }}
        known_hosts: unnecessary
        if_key_exists: replace

    - name: Add known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

    - name: Deploy frontend to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.SSH_DEPLOY_KEY }}
        publish_dir: ./my-app/build
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'Deploy frontend to GitHub Pages'

  deploy-backend:
    name: Deploy Backend
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./BACKEND
        push: false
        load: true
        tags: breast-cancer-detection-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Save backend Docker image
      run: |
        mkdir -p backend-image
        docker save breast-cancer-detection-backend:latest > backend-image/backend.tar

    - name: Create deployment record
      run: |
        echo "Backend image built successfully"
        echo "Image: breast-cancer-detection-backend:latest"
        echo "Deployment timestamp: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > backend-image/deployment.txt

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_DEPLOY_KEY }}
        known_hosts: unnecessary
        if_key_exists: replace

    - name: Add known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

    - name: Deploy backend artifacts to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.SSH_DEPLOY_KEY }}
        publish_dir: ./backend-image
        destination_dir: backend-artifacts
        keep_files: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: 'Deploy backend artifacts'
